<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		">

	<!-- 引入数据库配置文件 -->
	<!-- <bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath*:jdbc.properties" />
	</bean> -->
	
	<!-- 引入properties配置文件 -->
	<!-- <context:property-placeholder location="classpath*:*.properties" /> -->
	
	<!-- 配置自动扫描的包 -->
<!-- 	<context:component-scan base-package="com.dg.service"></context:component-scan>
	<context:component-scan base-package="com.dg.dao"></context:component-scan>
	<context:component-scan base-package="com.dg.cache"></context:component-scan> -->

	<!-- 启用注解 -->
	<context:annotation-config/>

<!-- MyBatis start -->

	<!-- 配置dataSource -->
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${oracle.driver}" />
		<property name="url" value="${oracle.url}" />
		<property name="username" value="${oracle.username}" />
		<property name="password" value="${oracle.password}" />
		初始化连接大小
		<property name="initialSize" value="${oracle.initialSize}"></property>
		连接池最大数量
		<property name="maxActive" value="${oracle.maxActive}"></property>
		连接池最大空闲
		<property name="maxIdle" value="${oracle.maxIdle}"></property>
		连接池最小空闲
		<property name="minIdle" value="${oracle.minIdle}"></property>
		获取连接最大等待时间
		<property name="maxWait" value="${oracle.maxWait}"></property>
	</bean>

	MyBatis配置 SqlSessionFactoryBean
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		自动扫描mapping.xml文件
		<property name="mapperLocations" value="classpath:com/dg/mapping/*.xml"></property>
		开启缓存支持
		<property name="configurationProperties">
			<props>
				<prop key="cacheEnabled">true</prop>
				查询时，关闭关联对象即时加载以提高性能
				<prop key="lazyLoadingEnabled">false</prop>
				设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指定)，不会加载关联表的所有字段，以提高性能
				<prop key="aggressiveLazyLoading">true</prop>
				对于未知的SQL查询，允许返回不同的结果集以达到通用的效果
				<prop key="multipleResultSetsEnabled">true</prop>
				允许使用列标签代替列名
				<prop key="useColumnLabel">true</prop>
				允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖
				<prop key="useGeneratedKeys">true</prop>
				给予被嵌套的resultMap以字段-属性的映射支持
				<prop key="autoMappingBehavior">FULL</prop>
				对于批量更新操作缓存SQL以提高性能
				<prop key="defaultExecutorType">BATCH</prop>
				数据库超过25000秒仍未响应则超时
				<prop key="defaultStatementTimeout">25000</prop>
			</props>
		</property>
	</bean>

	mybatis自动扫描加载Sql映射文件/接口 : MapperScannerConfigurer 
                 sqlSessionFactory
                 basePackage:指定sql映射文件/接口所在的包（自动扫描）
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.dg.dao" />
		
		这里有些博客的name="sqlSessionFactory" 这种写法已经deprecated
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
 -->
	<!-- (事务管理) DataSourceTransactionManager -->
	<!-- <bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	使用声明式事务 transaction-manager：引用上面定义的事务管理器
	<tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven> -->
	
<!-- MyBatis end -->
	
<!-- 配置redis部分 start -->
	
	<!-- 配置redis连接池  JedisPoolConfig-->
	<!-- <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxTotal" value="${redis.maxActive}" />
		<property name="maxWaitMillis" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>
	
	配置CoonnectionFactory JedisConnectionFactory
	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}"></property>
		<property name="port" value="${redis.port}"></property>
		<property name="password" value="${redis.pass}"></property>
		<property name="poolConfig" ref="jedisPoolConfig"></property>
	</bean>

	配置redisTemplate StringRedisTemplate
	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
	</bean> -->

</beans>
